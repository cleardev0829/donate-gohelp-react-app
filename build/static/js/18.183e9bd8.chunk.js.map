{"version":3,"sources":["components/_dashboard/user/account/AccountBillingPaymentMethod.js","components/PricingFeaturesTable.js","components/_dashboard/user/account/AccountBillingCard.js","components/_dashboard/user/account/AccountPlans.js","components/_dashboard/user/account/AccountBillingForOnly.js"],"names":["AccountBillingPaymentMethod","isOpen","onOpen","onCancel","enqueueSnackbar","useSnackbar","dispatch","useDispatch","user","useAuth","card","useSelector","state","id","displayName","email","React","useState","cvc","expiry","number","error","setState","formik","useFormik","initialValues","onSubmit","values","a","setSubmitting","resetForm","data","name","exp_month","parseInt","split","exp_year","stripe_CreateCardTokenAndCustomer","response","variant","fb_AddPayment","fb_AddCustomer","customer","getCards","getCustomers","isSubmitting","handleSubmit","sx","p","mb","display","color","Object","entries","length","spacing","direction","xs","md","width","position","border","theme","palette","grey","brand","last4","top","right","icon","moreVerticalFill","height","mt","size","disabled","startIcon","plusFill","onClick","in","padding","marginTop","borderRadius","bgcolor","value","noValidate","autoComplete","sm","onError","cardNumberInputProps","onChange","e","target","cardExpiryInputProps","cardCVCInputProps","fieldClassName","justifyContent","type","loading","useStyles","makeStyles","container","margin","minWidth","maxWidth","createData","tooltip","basic","starter","premium","rows","PricingFeaturesTable","classes","className","mr","component","Paper","aria-label","align","map","row","scope","alignItems","title","marginLeft","checked","inputProps","RootStyle","styled","Card","flexDirection","breakpoints","up","PricingPlanCard","index","onClose","subHandle","planName","subscription","price","lists","labelAction","setLoading","flag","handleSubscription","style","backgroundColor","Typography","Box","my","mx","Stack","item","typography","text","LoadingButton","fullWidth","appBar","flex","Transition","forwardRef","props","ref","Slide","AccountPlansDialog","open","month_plans","year_plans","subName","updateSubscriptionKey","paymentFlag","setPaymentFlag","handleCancel","plan_id","stripe_UpdateSubscription","priceId","stripe_CreateSubscription","cust_id","planId","fb_AddSubscription","getSubscription","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","Button","autoFocus","IconButton","edge","DialogContent","Container","paragraph","Switch","ml","motion","div","variants","varFadeIn","Grid","plan","AccountBillingForOnly","plans","setOpen","openPlans","setOpenPlans","useEffect","getPlans","getNotifications","mo_basic","mo_starter","mo_premium","year_basic","year_starter","year_premium","filter","el","nickname","interval","amount","handlPlanOpen","handlePlanCancel","stripe_CancelSubscription","fb_DeleteSubscription","prevOpen"],"mappings":"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","file":"static/js/18.183e9bd8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useFormik } from 'formik';\r\nimport { useSnackbar } from \"notistack\";\r\nimport { Form, FormikProvider } from 'formik';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport CreditCardInput from 'react-credit-card-input';\r\n\r\n// material\r\nimport { Box, Paper, Stack, Card, Button, Collapse, TextField, IconButton, Typography } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n\r\n// utils\r\nimport { stripe_CreateCardTokenAndCustomer } from '../../../../utils/stripeRequest';\r\nimport { fb_AddPayment, fb_AddCustomer } from '../../../../utils/firebaseRequest';\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from '../../../../redux/store';\r\nimport { getCards, getCustomers } from \"../../../../redux/slices/user\";\r\n\r\n//hooks\r\nimport useAuth from \"../../../../hooks/useAuth\";\r\n// ----------------------------------------------------------------------\r\n\r\nAccountBillingPaymentMethod.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onCancel: PropTypes.func\r\n};\r\n\r\nexport default function AccountBillingPaymentMethod({ isOpen, onOpen, onCancel }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n  const { user } = useAuth();\r\n  const { card } = useSelector((state) => state.user);\r\n  const { id, displayName, email } = user;\r\n  const [state, setState] = React.useState({\r\n    cvc: '',\r\n    expiry: '',\r\n    number: '',\r\n    error: true\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {},\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n\r\n      let data = {\r\n        email,\r\n        name: displayName,\r\n        number: state.number,\r\n        exp_month: parseInt(state.expiry.split(\"/\")[0]),\r\n        exp_year: parseInt(state.expiry.split(\"/\")[1]),\r\n        cvc: state.cvc\r\n      }\r\n\r\n      const response = await stripe_CreateCardTokenAndCustomer(data);\r\n      if (response.error) {\r\n        setSubmitting(false);\r\n        enqueueSnackbar(response.error, { variant: 'error' });\r\n      } else {\r\n        await fb_AddPayment(id, response.card);\r\n        await fb_AddCustomer(id, response.customer);\r\n        dispatch(getCards(id));\r\n        dispatch(getCustomers(id));\r\n        onCancel();\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Add card success', { variant: 'success' });\r\n      }\r\n    }\r\n  });\r\n\r\n  const handleCardNumberChange = (e) => {\r\n    setState({ ...state, number: e.target.value, error: false })\r\n  }\r\n\r\n  const handleCardExpiryChange = (e) => {\r\n    setState({ ...state, expiry: e.target.value, error: false })\r\n  }\r\n\r\n  const handleCardCVCChange = (e) => {\r\n    setState({ ...state, cvc: e.target.value, error: false })\r\n  }\r\n\r\n  const { isSubmitting, handleSubmit } = formik;\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: Object.entries(card).length === 0 ? \"red\" : 'text.secondary' }}>\r\n        {Object.entries(card).length === 0 ? `Please Add Payment Method` : `Added Payment Method`}\r\n      </Typography>\r\n\r\n      <Stack spacing={2} direction={{ xs: 'column', md: 'row' }}>\r\n        {\r\n          Object.entries(card).length !== 0 &&\r\n          <Paper\r\n            sx={{\r\n              p: 3,\r\n              width: 1,\r\n              position: 'relative',\r\n              border: (theme) => `solid 1px ${theme.palette.grey[500_32]}`\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle2\">{card.card.brand}</Typography>\r\n            <Typography variant=\"subtitle2\">{\"**** **** ****\"}{card.card.last4}</Typography>\r\n            <IconButton\r\n              sx={{\r\n                top: 8,\r\n                right: 8,\r\n                position: 'absolute'\r\n              }}\r\n            >\r\n              <Icon icon={moreVerticalFill} width={20} height={20} />\r\n            </IconButton>\r\n          </Paper>\r\n        }\r\n      </Stack>\r\n      <Box sx={{ mt: 3 }}>\r\n        <Button size=\"small\" disabled={Object.entries(card).length === 0 ? false : true} startIcon={<Icon icon={plusFill} />} onClick={onOpen}>\r\n          Add new card\r\n        </Button>\r\n      </Box>\r\n\r\n      <Collapse in={isOpen}>\r\n        <Box\r\n          sx={{\r\n            padding: 3,\r\n            marginTop: 3,\r\n            borderRadius: 1,\r\n            bgcolor: 'background.neutral'\r\n          }}\r\n        >\r\n          <FormikProvider value={formik}>\r\n            <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Stack spacing={3}>\r\n                <Typography variant=\"subtitle1\">Add new card</Typography>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n                  <CreditCardInput\r\n                    onError={() => setState({ ...state, error: true })}\r\n                    cardNumberInputProps={{ value: state.number, onChange: handleCardNumberChange }}\r\n                    cardExpiryInputProps={{ value: state.expiry, onChange: handleCardExpiryChange }}\r\n                    cardCVCInputProps={{ value: state.cvc, onChange: handleCardCVCChange }}\r\n                    fieldClassName=\"input\"\r\n                  />\r\n                </Stack>\r\n                <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1.5}>\r\n                  <Button type=\"button\" color=\"inherit\" variant=\"outlined\" onClick={onCancel}>\r\n                    Cancel\r\n                  </Button>\r\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} disabled={state.error ? true : false}>\r\n                    Save Change\r\n                  </LoadingButton>\r\n                </Stack>\r\n              </Stack>\r\n            </Form>\r\n          </FormikProvider>\r\n        </Box>\r\n      </Collapse>\r\n    </Card >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        \"& > *\": {\r\n            margin: \"30px auto\"\r\n        },\r\n        margin: 'auto',\r\n        minWidth: 500,\r\n        maxWidth: 1100,\r\n    },\r\n});\r\n\r\nfunction createData(name, tooltip, basic, starter, premium) {\r\n    return { name, tooltip, basic, starter, premium };\r\n}\r\n\r\nconst rows = [\r\n    createData('Continuous Integration', \"Every Github Commit is automatically built and deploy\", true, true, true),\r\n    createData('Continuous Deployment', \"Every Github Commit is automatically built and deploy\", true, true, true),\r\n    createData('Auto SSL', \"Every Github Commit is automatically built and deploy\", true, true, true),\r\n    createData('Deploy from DockerHub\t', \"Every Github Commit is automatically built and deploy\", true, true, true),\r\n    createData('Fine-tuned Resource Limits\t', \"Every Github Commit is automatically built and deploy\", true, true, true),\r\n    createData('Multiple Instances', \"Every Github Commit is automatically built and deploy\", true, true, true),\r\n    createData('Realtime Logs', \"Every Github Commit is automatically built and deploy\", true, true, true),\r\n    createData('Realtime Metrics', \"Every Github Commit is automatically built and deploy\", false, true, true),\r\n    createData('Build / Deploy Notifications', \"Every Github Commit is automatically built and deploy\", false, false, true),\r\n    createData('Custom Domains', \"Every Github Commit is automatically built and deploy\", false, false, true),\r\n    createData('Custom Environment Variables', \"Every Github Commit is automatically built and deploy\", false, false, false),\r\n];\r\n\r\nexport default function PricingFeaturesTable() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Divider />\r\n            <Typography variant=\"h3\" sx={{ mr: 1.5 }}>\r\n                Features\r\n            </Typography>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>FEATURE</TableCell>\r\n                            <TableCell align=\"right\">Basic</TableCell>\r\n                            <TableCell align=\"right\">Starter</TableCell>\r\n                            <TableCell align=\"right\">Premium</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\" sx={{ alignItems: 'center', display: 'flex' }}>\r\n                                    {row.name}\r\n                                    <Tooltip title={row.tooltip}>\r\n                                        <InfoIcon sx={{ width: 20, height: 20, marginLeft: 1 }} />\r\n                                    </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Checkbox\r\n                                        disabled={!row.basic}\r\n                                        checked={row.basic}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Checkbox\r\n                                        disabled={!row.starter}\r\n                                        checked={row.starter}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Checkbox\r\n                                        disabled={!row.premium}\r\n                                        checked={row.premium}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport { useSnackbar } from \"notistack\";\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Card, Typography, Box, Stack } from '@material-ui/core';\r\nimport { LoadingButton } from \"@material-ui/lab\";\r\n//\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n    borderRadius: 0,\r\n    maxWidth: 480,\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up(414)]: {\r\n        padding: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nPricingPlanCard.propTypes = {\r\n    index: PropTypes.number,\r\n    card: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    subHandle: PropTypes.func,\r\n    planName: PropTypes.string\r\n};\r\n\r\nexport default function PricingPlanCard({ card, index, onClose, subHandle, planName }) {\r\n    const { subscription, price, lists, labelAction, id } = card;\r\n    const [loading, setLoading] = React.useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const flag = index === 1 ? true : false;\r\n\r\n    const handleSubscription = async () => {\r\n        try {\r\n            setLoading(true);\r\n            await subHandle(id);\r\n            setLoading(false);\r\n            enqueueSnackbar(\"Created Subscription\", { variant: \"success\" });\r\n        } catch (error) {\r\n            enqueueSnackbar(\"Couldn't create Subscription\", { variant: \"error\" });\r\n        }\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <RootStyle style={{ backgroundColor: flag && '#00db1a', marginTop: flag && -15 }}>\r\n            <Typography variant=\"h3\" color={flag ? \"#fff\" : 'text.secondary'}>\r\n                {subscription}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color={flag ? \"#fff\" : 'text.secondary'}>\r\n                STARTS AT\r\n            </Typography>\r\n\r\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', my: 2 }}>\r\n                <Typography variant=\"subtitle1\" color={flag && \"#fff\"}>\r\n                    $\r\n                </Typography>\r\n                <Typography variant=\"h2\" color={flag && \"#fff\"} sx={{ mx: 1 }}>\r\n                    {price === 0 ? 'Free' : price}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Stack component=\"ul\" spacing={1} sx={{ my: 5, width: 1 }}>\r\n                {lists.map((item) => (\r\n                    <Stack\r\n                        key={item.text}\r\n                        component=\"li\"\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        spacing={1.5}\r\n                        sx={{ typography: 'body2', color: flag ? \"#000\" : 'text.secondary' }}\r\n                    >\r\n                        <CheckCircleIcon sx={{ width: 20, height: 20, color: flag ? \"#000\" : 'text.secondary' }} />\r\n                        <Typography variant=\"body2\">{item.text}</Typography>\r\n                    </Stack>\r\n                ))}\r\n            </Stack>\r\n            {flag && <div style={{ height: 30 }}></div>}\r\n            <LoadingButton\r\n                sx={{ backgroundColor: flag && \"#000\" }}\r\n                fullWidth\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                loading={loading}\r\n                disabled={planName === subscription ? true : false}\r\n                onClick={handleSubscription}\r\n            >\r\n                {planName === subscription ? \"current plan\" : labelAction}\r\n            </LoadingButton>\r\n        </RootStyle>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { motion } from \"framer-motion\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PricingPlanCard from './AccountBillingCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Box, Grid, Switch, Container, Typography } from '@material-ui/core';\r\nimport { varFadeIn } from '../../../animate'\r\nimport PricingFeaturesTable from \"../../../PricingFeaturesTable\";\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from '../../../../redux/store';\r\nimport { getSubscription } from \"../../../../redux/slices/user\";\r\n\r\n//APIs\r\nimport { stripe_CreateSubscription, stripe_UpdateSubscription } from '../../../../utils/stripeRequest'\r\nimport { fb_AddSubscription } from '../../../../utils/firebaseRequest'\r\n\r\n//hooks\r\nimport useAuth from \"../../../../hooks/useAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n        alignItems: 'flex-end'\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nAccountPlansDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    plans: PropTypes.array.isRequired,\r\n    subName: PropTypes.string\r\n};\r\n\r\nexport default function AccountPlansDialog(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { onClose, open, month_plans, year_plans, subName, ...other } = props;\r\n    const { user, updateSubscriptionKey } = useAuth();\r\n    let { customer, subscription } = useSelector((state) => state.user);\r\n    const [paymentFlag, setPaymentFlag] = useState(false);\r\n\r\n    const handleCancel = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSubscription = async (plan_id) => {\r\n        let data;\r\n        if (Object.entries(subscription).length > 0)\r\n            data = await stripe_UpdateSubscription({ id: subscription.id, priceId: plan_id })\r\n        else {\r\n            data = await stripe_CreateSubscription({ cust_id: customer.id, planId: plan_id })\r\n            data = data.data;\r\n        }\r\n        await fb_AddSubscription(user.id, data);\r\n        updateSubscriptionKey(true);\r\n        return dispatch(getSubscription(user.id))\r\n\r\n    }\r\n\r\n    return (\r\n        <Dialog fullScreen open={open} onClose={handleCancel} TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Button autoFocus color=\"inherit\" onClick={handleCancel}>\r\n                        Close\r\n                    </Button>\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCancel} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <DialogContent>\r\n                <Container maxWidth=\"lg\">\r\n                    <Typography variant=\"h3\" align=\"center\" paragraph>\r\n                        Flexible plans for your\r\n                        <br /> community&apos;s size and needs\r\n                    </Typography>\r\n                    <Typography align=\"center\" sx={{ color: 'text.secondary' }}>\r\n                        Choose your plan and make modern online conversation magic\r\n                    </Typography>\r\n\r\n                    <Box sx={{ my: 5 }}>\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'flex-end'\r\n                            }}\r\n                        >\r\n                            <Typography variant=\"overline\" sx={{ mr: 1.5 }}>\r\n                                MONTHLY\r\n                            </Typography>\r\n                            <Switch value={paymentFlag} onChange={(e) => setPaymentFlag(e.target.checked)} />\r\n                            <Typography variant=\"overline\" sx={{ ml: 1.5 }}>\r\n                                YEARLY (save 10%)\r\n                            </Typography>\r\n                        </Box>\r\n                        <Typography variant=\"caption\" align=\"right\" sx={{ color: 'text.secondary', display: 'block' }}>\r\n                            * Plus applicable taxes\r\n                        </Typography>\r\n                    </Box>\r\n                    {\r\n                        paymentFlag ?\r\n                            <motion.div variants={varFadeIn}>\r\n                                <Grid container sx={{ justifyContent: 'center', marginTop: 5 }}>\r\n                                    {year_plans.map((plan, index) =>\r\n                                        <Grid item xs={12} md={3}>\r\n                                            <PricingPlanCard card={plan} index={index} onClose={handleCancel} planName={subName} subHandle={handleSubscription} />\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </motion.div> :\r\n                            <motion.div variants={varFadeIn}>\r\n                                <Grid container sx={{ justifyContent: 'center', marginTop: 5 }}>\r\n                                    {month_plans.map((plan, index) =>\r\n                                        <Grid item xs={12} md={3}>\r\n                                            <PricingPlanCard card={plan} index={index} onClose={handleCancel} planName={subName} subHandle={handleSubscription} />\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </motion.div>\r\n                    }\r\n                    <PricingFeaturesTable />\r\n                </Container>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\n// material\r\nimport { Box, Grid, Card, Button, Typography, Stack } from \"@material-ui/core\";\r\n// redux\r\nimport { useSelector, useDispatch } from \"../../../../redux/store\";\r\nimport {\r\n  getCards,\r\n  getNotifications,\r\n  getCustomers,\r\n  getPlans,\r\n  getSubscription,\r\n} from \"../../../../redux/slices/user\";\r\n//hooks\r\nimport useAuth from \"../../../../hooks/useAuth\";\r\nimport AccountBillingPaymentMethod from \"./AccountBillingPaymentMethod\";\r\nimport AccountPlansDialog from \"./AccountPlans\";\r\nimport { stripe_CancelSubscription } from \"../../../../utils/stripeRequest\";\r\nimport { fb_DeleteSubscription } from \"../../../../utils/firebaseRequest\";\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountBillingForOnly() {\r\n  const dispatch = useDispatch();\r\n  const { user } = useAuth();\r\n  let { plans, subscription, card } = useSelector((state) => state.user);\r\n  const [open, setOpen] = useState(false);\r\n  const [openPlans, setOpenPlans] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPlans());\r\n    dispatch(getSubscription(user.id));\r\n    dispatch(getCards(user.id));\r\n    dispatch(getCustomers(user.id));\r\n    dispatch(getNotifications(user.id));\r\n  }, [dispatch]);\r\n\r\n  const flag = Object.entries(subscription).length === 0;\r\n\r\n  let mo_basic, mo_starter, mo_premium, year_basic, year_starter, year_premium;\r\n\r\n  //config plans:\r\n  if (Object.entries(plans).length) {\r\n    [year_basic] = plans.filter(function (el) {\r\n      return el.nickname === \"basic\" && el.interval == \"year\";\r\n    });\r\n\r\n    [year_starter] = plans.filter(function (el) {\r\n      return el.nickname === \"starter\" && el.interval == \"year\";\r\n    });\r\n\r\n    [year_premium] = plans.filter(function (el) {\r\n      return el.nickname === \"premium\" && el.interval == \"year\";\r\n    });\r\n\r\n    [mo_basic] = plans.filter(function (el) {\r\n      return el.nickname === \"basic\" && el.interval == \"month\";\r\n    });\r\n\r\n    [mo_starter] = plans.filter(function (el) {\r\n      return el.nickname === \"starter\" && el.interval == \"month\";\r\n    });\r\n\r\n    [mo_premium] = plans.filter(function (el) {\r\n      return el.nickname === \"premium\" && el.interval == \"month\";\r\n    });\r\n  }\r\n\r\n  let month_plans = [\r\n    {\r\n      id: mo_basic ? mo_basic.id : \"basic\",\r\n      subscription: \"basic\",\r\n      price: mo_basic ? mo_basic.amount / 100 : 10,\r\n      lists: [\r\n        { text: \"3 prototypes\" },\r\n        { text: \"3 boards\" },\r\n        { text: \"Up to 5 team members\" },\r\n        { text: \"Advanced security\" },\r\n        { text: \"Permissions & workflows\" },\r\n      ],\r\n      labelAction: \"choose basic\",\r\n    },\r\n    {\r\n      id: mo_starter ? mo_starter.id : \"starter\",\r\n      subscription: \"starter\",\r\n      price: mo_starter ? mo_starter.amount / 100 : 20,\r\n      lists: [\r\n        { text: \"3 prototypes\" },\r\n        { text: \"3 boards\" },\r\n        { text: \"Up to 5 team members\" },\r\n        { text: \"Advanced security\" },\r\n        { text: \"Permissions & workflows\" },\r\n      ],\r\n      labelAction: \"choose starter\",\r\n    },\r\n    {\r\n      id: mo_premium ? mo_premium.id : \"starter\",\r\n      subscription: \"premium\",\r\n      price: mo_premium ? mo_premium.amount / 100 : 30,\r\n      lists: [\r\n        { text: \"3 prototypes\" },\r\n        { text: \"3 boards\" },\r\n        { text: \"Up to 5 team members\" },\r\n        { text: \"Advanced security\" },\r\n        { text: \"Permissions & workflows\" },\r\n      ],\r\n      labelAction: \"choose premium\",\r\n    },\r\n  ];\r\n\r\n  let year_plans = [\r\n    {\r\n      id: year_basic ? year_basic.id : \"basic\",\r\n      subscription: \"basic\",\r\n      price: year_basic ? year_basic.amount / 100 : 10,\r\n      lists: [\r\n        { text: \"3 prototypes\" },\r\n        { text: \"3 boards\" },\r\n        { text: \"Up to 5 team members\" },\r\n        { text: \"Advanced security\" },\r\n        { text: \"Permissions & workflows\" },\r\n      ],\r\n      labelAction: \"choose basic\",\r\n    },\r\n    {\r\n      id: year_starter ? year_starter.id : \"starter\",\r\n      subscription: \"starter\",\r\n      price: year_starter ? year_starter.amount / 100 : 20,\r\n      lists: [\r\n        { text: \"3 prototypes\" },\r\n        { text: \"3 boards\" },\r\n        { text: \"Up to 5 team members\" },\r\n        { text: \"Advanced security\" },\r\n        { text: \"Permissions & workflows\" },\r\n      ],\r\n      labelAction: \"choose starter\",\r\n    },\r\n    {\r\n      id: year_premium ? year_premium.id : \"starter\",\r\n      subscription: \"premium\",\r\n      price: year_premium ? year_premium.amount / 100 : 30,\r\n      lists: [\r\n        { text: \"3 prototypes\" },\r\n        { text: \"3 boards\" },\r\n        { text: \"Up to 5 team members\" },\r\n        { text: \"Advanced security\" },\r\n        { text: \"Permissions & workflows\" },\r\n      ],\r\n      labelAction: \"choose premium\",\r\n    },\r\n  ];\r\n\r\n  const handleOpenAddCard = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlPlanOpen = () => {\r\n    setOpenPlans(true);\r\n  };\r\n\r\n  const handlPlanClose = () => {\r\n    setOpenPlans(false);\r\n  };\r\n\r\n  const handlePlanCancel = async () => {\r\n    await stripe_CancelSubscription({ id: subscription.id });\r\n    await fb_DeleteSubscription(user.id);\r\n    dispatch(getSubscription(user.id));\r\n    enqueueSnackbar(\"Canceld Subscription\", { variant: \"success\" });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={5}>\r\n      <Grid item xs={12}>\r\n        <Stack spacing={3}>\r\n          {Object.entries(card).length > 0 && (\r\n            <Card sx={{ p: 3 }}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                sx={{ mb: 3, display: \"block\", color: \"text.secondary\" }}\r\n              >\r\n                Your Plan\r\n              </Typography>\r\n              <Typography variant=\"h4\" color={flag && \"red\"}>\r\n                {flag ? `No subscription` : subscription.plan.nickname}\r\n              </Typography>\r\n              <Box\r\n                sx={{\r\n                  mt: { xs: 2, sm: 0 },\r\n                  position: { sm: \"absolute\" },\r\n                  top: { sm: 24 },\r\n                  right: { sm: 24 },\r\n                }}\r\n              >\r\n                {flag ? (\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={handlPlanOpen}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Join now\r\n                  </Button>\r\n                ) : (\r\n                  <>\r\n                    <Button\r\n                      size=\"small\"\r\n                      onClick={handlePlanCancel}\r\n                      color=\"inherit\"\r\n                      variant=\"outlined\"\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      Cancel plan\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      onClick={handlPlanOpen}\r\n                      variant=\"outlined\"\r\n                    >\r\n                      Upgrade plan\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </Card>\r\n          )}\r\n          <AccountBillingPaymentMethod\r\n            isOpen={open}\r\n            onCancel={handleCancel}\r\n            onOpen={handleOpenAddCard}\r\n          />\r\n        </Stack>\r\n      </Grid>\r\n      <AccountPlansDialog\r\n        open={openPlans}\r\n        onClose={handlPlanClose}\r\n        month_plans={month_plans}\r\n        year_plans={year_plans}\r\n        subName={flag ? \"\" : subscription.plan.nickname}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n"],"sourceRoot":""}