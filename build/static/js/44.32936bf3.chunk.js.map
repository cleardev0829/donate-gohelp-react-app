{"version":3,"sources":["pages/dashboard/UserProfile.js"],"names":["UserProfile","useState","currentTab","setCurrentTab","dispatch","useDispatch","user","useAuth","useEffect","getPlans","getSubscription","id","getCards","getCustomers","getNotifications","getProfile","ACCOUNT_TABS","value","icon","roundAccountBox","width","height","component","roundReceipt","bellFill","shareFill","roundVpnKey","title","heading","links","name","href","PATH_DASHBOARD","root","spacing","scrollButtons","variant","allowScrollButtonsMobile","onChange","event","newValue","map","tab","disableRipple","label","capitalCase"],"mappings":"ybAsCe,SAASA,IACtB,MAAoCC,mBAAS,WAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,cACTC,EAASC,cAATD,KAERE,qBAAU,WACRJ,EAASK,eACTL,EAASM,YAAgBJ,EAAKK,KAC9BP,EAASQ,YAASN,EAAKK,KACvBP,EAASS,YAAaP,EAAKK,KAC3BP,EAASU,YAAiBR,EAAKK,KAC/BP,EAASW,YAAWT,EAAKK,OACxB,CAACP,IAEJ,IAAMY,EAAe,CACnB,CACEC,MAAO,UACPC,KAAM,cAAC,IAAD,CAAMA,KAAMC,IAAiBC,MAAO,GAAIC,OAAQ,KACtDC,UAAW,cAAC,IAAD,KAEb,CACEL,MAAO,UACPC,KAAM,cAAC,IAAD,CAAMA,KAAMK,IAAcH,MAAO,GAAIC,OAAQ,KACnDC,UAAW,cAAC,IAAD,KAEb,CACEL,MAAO,gBACPC,KAAM,cAAC,IAAD,CAAMA,KAAMM,IAAUJ,MAAO,GAAIC,OAAQ,KAC/CC,UAAW,cAAC,IAAD,KAEb,CACEL,MAAO,eACPC,KAAM,cAAC,IAAD,CAAMA,KAAMO,IAAWL,MAAO,GAAIC,OAAQ,KAChDC,UAAW,cAAC,IAAD,KAEb,CACEL,MAAO,kBACPC,KAAM,cAAC,IAAD,CAAMA,KAAMQ,IAAaN,MAAO,GAAIC,OAAQ,KAClDC,UAAW,cAAC,IAAD,MAQf,OACE,cAAC,IAAD,CAAMK,MAAM,kCAAZ,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,QAAQ,UACRC,MAAO,CACL,CAAEC,KAAM,YAAaC,KAAMC,IAAeC,MAC1C,CAAEH,KAAM,OAAQC,KAAMC,IAAe1B,KAAK2B,MAC1C,CAAEH,KAAM,cAIZ,eAAC,IAAD,CAAOI,QAAS,EAAhB,UACE,cAAC,IAAD,CACEjB,MAAOf,EACPiC,cAAc,OACdC,QAAQ,aACRC,0BAAwB,EACxBC,SAtBc,SAACC,EAAOC,GAC9BrC,EAAcqC,IAgBR,SAOGxB,EAAayB,KAAI,SAACC,GAAD,OAChB,cAAC,IAAD,CACEC,eAAa,EAEbC,MAAOC,YAAYH,EAAIzB,OACvBC,KAAMwB,EAAIxB,KACVD,MAAOyB,EAAIzB,OAHNyB,EAAIzB,YAQdD,EAAayB,KAAI,SAACC,GAEjB,OADkBA,EAAIzB,QAAUf,GACZ,cAAC,IAAD,UAAsBwC,EAAIpB,WAAhBoB,EAAIzB","file":"static/js/44.32936bf3.chunk.js","sourcesContent":["import { Icon } from \"@iconify/react\";\r\nimport { capitalCase } from \"change-case\";\r\nimport { useState, useEffect } from \"react\";\r\nimport bellFill from \"@iconify/icons-eva/bell-fill\";\r\nimport shareFill from \"@iconify/icons-eva/share-fill\";\r\nimport roundVpnKey from \"@iconify/icons-ic/round-vpn-key\";\r\nimport roundReceipt from \"@iconify/icons-ic/round-receipt\";\r\nimport roundAccountBox from \"@iconify/icons-ic/round-account-box\";\r\n// material\r\nimport { Container, Tab, Box, Tabs, Stack } from \"@material-ui/core\";\r\n// redux\r\nimport { useDispatch } from \"../../redux/store\";\r\nimport {\r\n  getCards,\r\n  getProfile,\r\n  getNotifications,\r\n  getCustomers,\r\n  getPlans,\r\n  getSubscription\r\n} from \"../../redux/slices/user\";\r\n// routes\r\nimport { PATH_DASHBOARD } from \"../../routes/paths\";\r\n//hooks\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// components\r\nimport Page from \"../../components/Page\";\r\nimport HeaderBreadcrumbs from \"../../components/HeaderBreadcrumbs\";\r\nimport {\r\n  AccountGeneral,\r\n  AccountBilling,\r\n  AccountSocialLinks,\r\n  AccountNotifications,\r\n  AccountChangePassword,\r\n} from \"../../components/_dashboard/user/account\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserProfile() {\r\n  const [currentTab, setCurrentTab] = useState(\"general\");\r\n  const dispatch = useDispatch();\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPlans());\r\n    dispatch(getSubscription(user.id))\r\n    dispatch(getCards(user.id));\r\n    dispatch(getCustomers(user.id));\r\n    dispatch(getNotifications(user.id));\r\n    dispatch(getProfile(user.id));\r\n  }, [dispatch]);\r\n\r\n  const ACCOUNT_TABS = [\r\n    {\r\n      value: \"general\",\r\n      icon: <Icon icon={roundAccountBox} width={20} height={20} />,\r\n      component: <AccountGeneral />,\r\n    },\r\n    {\r\n      value: \"billing\",\r\n      icon: <Icon icon={roundReceipt} width={20} height={20} />,\r\n      component: <AccountBilling />,\r\n    },\r\n    {\r\n      value: \"notifications\",\r\n      icon: <Icon icon={bellFill} width={20} height={20} />,\r\n      component: <AccountNotifications />,\r\n    },\r\n    {\r\n      value: \"social_links\",\r\n      icon: <Icon icon={shareFill} width={20} height={20} />,\r\n      component: <AccountSocialLinks />,\r\n    },\r\n    {\r\n      value: \"change_password\",\r\n      icon: <Icon icon={roundVpnKey} width={20} height={20} />,\r\n      component: <AccountChangePassword />,\r\n    },\r\n  ];\r\n\r\n  const handleChangeTab = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"User: User Profile | Minimal-UI\">\r\n      <Container>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Profile\"\r\n          links={[\r\n            { name: \"Dashboard\", href: PATH_DASHBOARD.root },\r\n            { name: \"User\", href: PATH_DASHBOARD.user.root },\r\n            { name: \"Profile\" },\r\n          ]}\r\n        />\r\n\r\n        <Stack spacing={5}>\r\n          <Tabs\r\n            value={currentTab}\r\n            scrollButtons=\"auto\"\r\n            variant=\"scrollable\"\r\n            allowScrollButtonsMobile\r\n            onChange={handleChangeTab}\r\n          >\r\n            {ACCOUNT_TABS.map((tab) => (\r\n              <Tab\r\n                disableRipple\r\n                key={tab.value}\r\n                label={capitalCase(tab.value)}\r\n                icon={tab.icon}\r\n                value={tab.value}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          {ACCOUNT_TABS.map((tab) => {\r\n            const isMatched = tab.value === currentTab;\r\n            return isMatched && <Box key={tab.value}>{tab.component}</Box>;\r\n          })}\r\n        </Stack>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}