{"version":3,"sources":["components/_external-pages/fundraise/FundraiseUpdate.js"],"names":["FundraiseUpdate","theme","useTheme","params","useParams","dispatch","useDispatch","navigate","useNavigate","enqueueSnackbar","useSnackbar","isLight","useSelector","state","fundraise","checkout","palette","mode","useState","open","setOpen","handleOpenPreview","handleClosePreview","NewBlogSchema","Yup","shape","content","required","cover","formik","useFormik","initialValues","text","validationSchema","onSubmit","values","a","setSubmitting","resetForm","fakeRequest","addUpdate","fundraiseId","id","description","variant","console","error","errors","touched","handleSubmit","setFieldValue","isSubmitting","handleDrop","getFieldProps","useCallback","acceptedFiles","preview","URL","createObjectURL","rotate","scale","maxWidth","sx","paddingTop","spacing","PAGE_TOP_PADDING","paddingBottom","PAGE_BOTTOM_PADDING","value","noValidate","autoComplete","cancelTitle","continueTitle","cancelAction","continueAction","container","item","xs","md","MAIN_VERTICAL_SPACING","p","CARD_PADDING","CARD_CONTENT_SPACING","component","color","paragraph","textShadow","alpha","grey","simple","onChange","delta","source","editor","getText","Boolean","px","maxSize","accept","file","onDrop","direction","justifyContent","size","type","startIcon","icon","onClick","setCheckout","name","openPreview","onClosePreview"],"mappings":"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","file":"static/js/38.1d903690.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch, useSelector } from \"../../../redux/store\";\r\nimport checkmarkCircle2Outline from \"@iconify/icons-eva/checkmark-circle-2-outline\";\r\nimport radioButtonOffOutline from \"@iconify/icons-eva/radio-button-off-outline\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport {\r\n  alpha,\r\n  experimentalStyled as styled,\r\n  useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Typography,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport fakeRequest from \"../../../utils/fakeRequest\";\r\nimport {\r\n  onBackStep,\r\n  onNextStep,\r\n  setCheckout,\r\n  addUpdate,\r\n} from \"../../../redux/slices/fundraise\";\r\nimport { UploadSingleFileOverride } from \"../../upload\";\r\nimport { FundraiseHeader } from \".\";\r\nimport FundraisePhotoEditor from \"./FundraisePhotoEditor\";\r\nimport Page from \"src/components/Page\";\r\nimport { QuillEditor } from \"../../editor\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FundraiseUpdate() {\r\n  const theme = useTheme();\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { checkout } = useSelector((state) => state.fundraise);\r\n  const isLight = theme.palette.mode === \"light\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenPreview = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClosePreview = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleBackStep = () => {\r\n    dispatch(onBackStep());\r\n  };\r\n\r\n  const handleNextStep = () => {\r\n    dispatch(onNextStep());\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleOpenPreview();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const NewBlogSchema = Yup.object().shape({\r\n    content: Yup.string().required(\"Description is required\"),\r\n    cover: Yup.mixed().required(\"Cover is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      content: \"\",\r\n      text: \"\",\r\n      cover: null,\r\n    },\r\n    validationSchema: NewBlogSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n        resetForm();\r\n        handleClosePreview();\r\n        setSubmitting(false);\r\n        dispatch(\r\n          addUpdate({\r\n            fundraiseId: params.id,\r\n            description: {\r\n              content: values.content,\r\n              text: values.text,\r\n            },\r\n            cover: values.cover,\r\n          })\r\n        );\r\n        enqueueSnackbar(\"Post success\", { variant: \"success\" });\r\n        navigate(-1);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  const {\r\n    errors,\r\n    values,\r\n    touched,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    setFieldValue,\r\n    getFieldProps,\r\n  } = formik;\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const cover = acceptedFiles[0];\r\n\r\n      if (cover) {\r\n        setFieldValue(\"cover\", {\r\n          ...cover,\r\n          preview: URL.createObjectURL(cover),\r\n          rotate: 0,\r\n          scale: 0,\r\n        });\r\n      }\r\n    },\r\n    [setFieldValue]\r\n  );\r\n\r\n  const handleDelete = () => {\r\n    setFieldValue(\"cover\", null);\r\n    dispatch(\r\n      setCheckout({\r\n        name: \"cover\",\r\n        value: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        maxWidth=\"lg\"\r\n        sx={{\r\n          paddingTop: (theme) => theme.spacing(theme.shape.PAGE_TOP_PADDING),\r\n          paddingBottom: (theme) =>\r\n            theme.spacing(theme.shape.PAGE_BOTTOM_PADDING),\r\n        }}\r\n      >\r\n        <FormikProvider value={formik}>\r\n          <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <FundraiseHeader\r\n              cancelTitle=\"Cancel\"\r\n              continueTitle=\"Post Update\"\r\n              cancelAction={handleCancel}\r\n              continueAction={handleSubmit}\r\n            />\r\n\r\n            <Container maxWidth=\"md\">\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  <Stack spacing={theme.shape.MAIN_VERTICAL_SPACING}>\r\n                    <Card\r\n                      sx={{\r\n                        p: theme.shape.CARD_PADDING,\r\n                      }}\r\n                    >\r\n                      <Stack spacing={theme.shape.CARD_CONTENT_SPACING}>\r\n                        <Typography\r\n                          component=\"p\"\r\n                          variant=\"h5\"\r\n                          sx={{ color: \"text.primary\" }}\r\n                        >\r\n                          Post an Update\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          component=\"p\"\r\n                          variant=\"body1\"\r\n                          sx={{ color: \"text.primary\" }}\r\n                        >\r\n                          So that people can get in touch with you.\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          paragraph\r\n                          sx={{\r\n                            ...(!isLight && {\r\n                              textShadow: (theme) =>\r\n                                `4px 4px 16px ${alpha(\r\n                                  theme.palette.grey[800],\r\n                                  0.48\r\n                                )}`,\r\n                            }),\r\n                          }}\r\n                        >\r\n                          Share your news\r\n                        </Typography>\r\n\r\n                        <QuillEditor\r\n                          id=\"product-description\"\r\n                          simple\r\n                          value={values.content}\r\n                          onChange={(content, delta, source, editor) => {\r\n                            const text = editor.getText(content);\r\n\r\n                            setFieldValue(\"content\", content);\r\n                            setFieldValue(\"text\", text);\r\n                          }}\r\n                          error={Boolean(touched.content && errors.content)}\r\n                        />\r\n                        {touched.content && errors.content && (\r\n                          <FormHelperText error sx={{ px: 2 }}>\r\n                            {touched.content && errors.content}\r\n                          </FormHelperText>\r\n                        )}\r\n\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          sx={{\r\n                            ...(!isLight && {\r\n                              textShadow: (theme) =>\r\n                                `4px 4px 16px ${alpha(\r\n                                  theme.palette.grey[800],\r\n                                  0.48\r\n                                )}`,\r\n                            }),\r\n                          }}\r\n                        >\r\n                          Add a cover photo or video\r\n                        </Typography>\r\n\r\n                        <div>\r\n                          <UploadSingleFileOverride\r\n                            maxSize={3145728}\r\n                            accept=\"image/*\"\r\n                            file={values.cover}\r\n                            onDrop={(acceptedFiles) => {\r\n                              handleOpenPreview();\r\n                              handleDrop(acceptedFiles);\r\n                            }}\r\n                            error={Boolean(touched.cover && errors.cover)}\r\n                          />\r\n                          {touched.cover && errors.cover && (\r\n                            <FormHelperText error sx={{ px: 2 }}>\r\n                              {touched.cover && errors.cover}\r\n                            </FormHelperText>\r\n                          )}\r\n                        </div>\r\n\r\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                          <Button\r\n                            size=\"small\"\r\n                            type=\"button\"\r\n                            variant=\"outlined\"\r\n                            startIcon={<Icon icon=\"akar-icons:edit\" />}\r\n                            onClick={handleEdit}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            size=\"small\"\r\n                            type=\"button\"\r\n                            variant=\"outlined\"\r\n                            startIcon={<Icon icon=\"bx:trash-alt\" />}\r\n                            onClick={handleDelete}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Stack>\r\n\r\n                        {/* <Typography\r\n                          variant=\"h3\"\r\n                          sx={{\r\n                            ...(!isLight && {\r\n                              textShadow: (theme) =>\r\n                                `4px 4px 16px ${alpha(\r\n                                  theme.palette.grey[800],\r\n                                  0.48\r\n                                )}`,\r\n                            }),\r\n                          }}\r\n                        >\r\n                          Share Update to\r\n                        </Typography>\r\n\r\n                        <Stack direction=\"row\" alignItems=\"center\">\r\n                          <Checkbox\r\n                            disableRipple\r\n                            // checked={completed}\r\n                            icon={<Icon icon={radioButtonOffOutline} />}\r\n                            checkedIcon={\r\n                              <Icon icon={checkmarkCircle2Outline} />\r\n                            }\r\n                            // onChange={handleChangeComplete}\r\n                          />\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            noWrap\r\n                            // onClick={handleOpen}\r\n                            // sx={{ ...(completed && { opacity: 0.48 }) }}\r\n                          >\r\n                            Campaign Page (default)\r\n                          </Typography>\r\n                        </Stack> */}\r\n                      </Stack>\r\n                    </Card>\r\n\r\n                    {/* <Box\r\n                    sx={{\r\n                      height: 2,\r\n                      backgroundColor: (theme) => theme.palette.common.white,\r\n                      background:\r\n                        \"radial-gradient(50% 50% at 50% 50%, #DADADA 0%, rgba(218, 218, 218, 0) 100%)\",\r\n                      transform: \"matrix(-1, 0, 0, 1, 0, 0)\",\r\n                    }}\r\n                  ></Box>\r\n\r\n                  <Card sx={{ px: 2, py: 2 }}>\r\n                    <Stack\r\n                      spacing={1}\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"flex-start\"\r\n                    >\r\n                      <Icon icon=\"fluent:link-square-20-regular\" />\r\n                      <Typography variant=\"subtitle1\">Add a YouTube link</Typography>\r\n                    </Stack>\r\n                  </Card> */}\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Form>\r\n        </FormikProvider>\r\n      </Container>\r\n\r\n      <FundraisePhotoEditor\r\n        formik={formik}\r\n        openPreview={open}\r\n        onClosePreview={handleClosePreview}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}